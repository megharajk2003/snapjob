{"dependencies":[{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":24},"end":{"line":2,"column":38,"index":62}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.streamedQuery = streamedQuery;\n  var _utils = require(_dependencyMap[0], \"./utils.js\");\n  // src/streamedQuery.ts\n\n  function streamedQuery({\n    streamFn,\n    refetchMode = \"reset\",\n    reducer = (items, chunk) => (0, _utils.addToEnd)(items, chunk),\n    initialValue = []\n  }) {\n    return async context => {\n      const query = context.client.getQueryCache().find({\n        queryKey: context.queryKey,\n        exact: true\n      });\n      const isRefetch = !!query && query.state.data !== void 0;\n      if (isRefetch && refetchMode === \"reset\") {\n        query.setState({\n          status: \"pending\",\n          data: void 0,\n          error: null,\n          fetchStatus: \"fetching\"\n        });\n      }\n      let result = initialValue;\n      const stream = await streamFn(context);\n      for await (const chunk of stream) {\n        if (context.signal.aborted) {\n          break;\n        }\n        if (!isRefetch || refetchMode !== \"replace\") {\n          context.client.setQueryData(context.queryKey, prev => reducer(prev === void 0 ? initialValue : prev, chunk));\n        }\n        result = reducer(result, chunk);\n      }\n      if (isRefetch && refetchMode === \"replace\" && !context.signal.aborted) {\n        context.client.setQueryData(context.queryKey, result);\n      }\n      return context.client.getQueryData(context.queryKey);\n    };\n  }\n});","lineCount":46,"map":[[6,2,2,0],[6,6,2,0,"_utils"],[6,12,2,0],[6,15,2,0,"require"],[6,22,2,0],[6,23,2,0,"_dependencyMap"],[6,37,2,0],[7,2,1,0],[9,2,3,0],[9,11,3,9,"streamedQuery"],[9,24,3,22,"streamedQuery"],[9,25,3,23],[10,4,4,2,"streamFn"],[10,12,4,10],[11,4,5,2,"refetchMode"],[11,15,5,13],[11,18,5,16],[11,25,5,23],[12,4,6,2,"reducer"],[12,11,6,9],[12,14,6,12,"reducer"],[12,15,6,13,"items"],[12,20,6,18],[12,22,6,20,"chunk"],[12,27,6,25],[12,32,6,30],[12,36,6,30,"addToEnd"],[12,51,6,38],[12,53,6,39,"items"],[12,58,6,44],[12,60,6,46,"chunk"],[12,65,6,51],[12,66,6,52],[13,4,7,2,"initialValue"],[13,16,7,14],[13,19,7,17],[14,2,8,0],[14,3,8,1],[14,5,8,3],[15,4,9,2],[15,11,9,9],[15,17,9,16,"context"],[15,24,9,23],[15,28,9,28],[16,6,10,4],[16,12,10,10,"query"],[16,17,10,15],[16,20,10,18,"context"],[16,27,10,25],[16,28,10,26,"client"],[16,34,10,32],[16,35,10,33,"getQueryCache"],[16,48,10,46],[16,49,10,47],[16,50,10,48],[16,51,10,49,"find"],[16,55,10,53],[16,56,10,54],[17,8,10,56,"queryKey"],[17,16,10,64],[17,18,10,66,"context"],[17,25,10,73],[17,26,10,74,"queryKey"],[17,34,10,82],[18,8,10,84,"exact"],[18,13,10,89],[18,15,10,91],[19,6,10,96],[19,7,10,97],[19,8,10,98],[20,6,11,4],[20,12,11,10,"isRefetch"],[20,21,11,19],[20,24,11,22],[20,25,11,23],[20,26,11,24,"query"],[20,31,11,29],[20,35,11,33,"query"],[20,40,11,38],[20,41,11,39,"state"],[20,46,11,44],[20,47,11,45,"data"],[20,51,11,49],[20,56,11,54],[20,61,11,59],[20,62,11,60],[21,6,12,4],[21,10,12,8,"isRefetch"],[21,19,12,17],[21,23,12,21,"refetchMode"],[21,34,12,32],[21,39,12,37],[21,46,12,44],[21,48,12,46],[22,8,13,6,"query"],[22,13,13,11],[22,14,13,12,"setState"],[22,22,13,20],[22,23,13,21],[23,10,14,8,"status"],[23,16,14,14],[23,18,14,16],[23,27,14,25],[24,10,15,8,"data"],[24,14,15,12],[24,16,15,14],[24,21,15,19],[24,22,15,20],[25,10,16,8,"error"],[25,15,16,13],[25,17,16,15],[25,21,16,19],[26,10,17,8,"fetchStatus"],[26,21,17,19],[26,23,17,21],[27,8,18,6],[27,9,18,7],[27,10,18,8],[28,6,19,4],[29,6,20,4],[29,10,20,8,"result"],[29,16,20,14],[29,19,20,17,"initialValue"],[29,31,20,29],[30,6,21,4],[30,12,21,10,"stream"],[30,18,21,16],[30,21,21,19],[30,27,21,25,"streamFn"],[30,35,21,33],[30,36,21,34,"context"],[30,43,21,41],[30,44,21,42],[31,6,22,4],[31,17,22,15],[31,23,22,21,"chunk"],[31,28,22,26],[31,32,22,30,"stream"],[31,38,22,36],[31,40,22,38],[32,8,23,6],[32,12,23,10,"context"],[32,19,23,17],[32,20,23,18,"signal"],[32,26,23,24],[32,27,23,25,"aborted"],[32,34,23,32],[32,36,23,34],[33,10,24,8],[34,8,25,6],[35,8,26,6],[35,12,26,10],[35,13,26,11,"isRefetch"],[35,22,26,20],[35,26,26,24,"refetchMode"],[35,37,26,35],[35,42,26,40],[35,51,26,49],[35,53,26,51],[36,10,27,8,"context"],[36,17,27,15],[36,18,27,16,"client"],[36,24,27,22],[36,25,27,23,"setQueryData"],[36,37,27,35],[36,38,28,10,"context"],[36,45,28,17],[36,46,28,18,"queryKey"],[36,54,28,26],[36,56,29,11,"prev"],[36,60,29,15],[36,64,29,20,"reducer"],[36,71,29,27],[36,72,29,28,"prev"],[36,76,29,32],[36,81,29,37],[36,86,29,42],[36,87,29,43],[36,90,29,46,"initialValue"],[36,102,29,58],[36,105,29,61,"prev"],[36,109,29,65],[36,111,29,67,"chunk"],[36,116,29,72],[36,117,30,8],[36,118,30,9],[37,8,31,6],[38,8,32,6,"result"],[38,14,32,12],[38,17,32,15,"reducer"],[38,24,32,22],[38,25,32,23,"result"],[38,31,32,29],[38,33,32,31,"chunk"],[38,38,32,36],[38,39,32,37],[39,6,33,4],[40,6,34,4],[40,10,34,8,"isRefetch"],[40,19,34,17],[40,23,34,21,"refetchMode"],[40,34,34,32],[40,39,34,37],[40,48,34,46],[40,52,34,50],[40,53,34,51,"context"],[40,60,34,58],[40,61,34,59,"signal"],[40,67,34,65],[40,68,34,66,"aborted"],[40,75,34,73],[40,77,34,75],[41,8,35,6,"context"],[41,15,35,13],[41,16,35,14,"client"],[41,22,35,20],[41,23,35,21,"setQueryData"],[41,35,35,33],[41,36,35,34,"context"],[41,43,35,41],[41,44,35,42,"queryKey"],[41,52,35,50],[41,54,35,52,"result"],[41,60,35,58],[41,61,35,59],[42,6,36,4],[43,6,37,4],[43,13,37,11,"context"],[43,20,37,18],[43,21,37,19,"client"],[43,27,37,25],[43,28,37,26,"getQueryData"],[43,40,37,38],[43,41,37,39,"context"],[43,48,37,46],[43,49,37,47,"queryKey"],[43,57,37,55],[43,58,37,56],[44,4,38,2],[44,5,38,3],[45,2,39,0],[46,0,39,1],[46,3]],"functionMap":{"names":["<global>","streamedQuery","<anonymous>","context.client.setQueryData$argument_1"],"mappings":"AAA;ACE;YCG,wCD;SCG;UCoB,+DD;GDS;CDC"}},"type":"js/module"}]}